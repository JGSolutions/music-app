
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use 'sass:map';
@use '~@angular/material' as mat;
@use '../src/app/app-player/side-nav-theme.scss' as sideNav;
@use '../src/app/shared/components/track-item/track-item.theme.scss' as trackItem;
@use '../src/app/shared/components/song-item/song-item.theme' as songItem;

@import './theme/custom-theme.scss';
@import './theme/variables.scss';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

/* For use in src/lib/core/theming/_palette.scss */
$music-app-primary: mat.define-palette($md-primary, 500);
$music-app-accent: mat.define-palette($md-secondary);
$music-app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$music-app-theme: mat.define-light-theme((
  color: (
    primary: $music-app-primary,
    accent: $music-app-accent,
    warn: $music-app-warn,
  )
));

@function my-light-theme-background() {
  @return (
    status-bar: map.get($md-primary, 300),
    app-bar:    map.get($md-primary, 100),
    background: white,
    hover:      rgba(black, 0.04),
    card:       white,
    dialog:     white,
    disabled-button: rgba(black, 0.12),
    raised-button: white,
    focused-button: #000,
    selected-button: map.get($md-primary, 300),
    selected-disabled-button: map.get($md-primary, 400),
    disabled-button-toggle: map.get($md-primary, 200),
    unselected-chip: map.get($md-primary, 300),
    disabled-list-option: map.get($md-primary, 200),
    tooltip: map.get($md-primary, 700),
  );
};

@function my-light-theme-foreground() {
  @return(
    base:              black,
    divider:           rgba(black, 0.12),
    dividers:          rgba(black, 0.12),
    disabled:          rgba(black, 0.38),
    disabled-button:   rgba(black, 0.26),
    disabled-text:     rgba(black, 0.38),
    elevation:         black,
    // hint-text:         $dark-disabled-text,
    secondary-text:    rgba(black, 0.60),
    icon:              rgba(black, 0.54),
    icons:             rgba(black, 0.54),
    text:              rgba(black, 0.87),
    slider-min:        rgba(black, 0.87),
    slider-off:        rgba(black, 0.26),
    slider-off-active: rgba(black, 0.38),
  );
};


$my-background: my-light-theme-background();
$my-foreground: my-light-theme-foreground();
$music-app-theme-new: map.merge($music-app-theme, (background: $my-background, foreground: $my-foreground));

@include mat.all-component-themes($music-app-theme-new);
@include sideNav.theme($music-app-theme-new);
@include trackItem.theme($music-app-theme-new);
@include songItem.theme($music-app-theme-new);


/* You can add global styles to this file, and also import other style files */
html, body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.sticky-element {
  position: sticky;
  top: 0;
  z-index: 2;
}

.sticky-sub-element {
  position: sticky;
  top: 50px;
  z-index: 2;
}

.playlist-dialog .mat-dialog-container {
  padding: 24px 24px 0 24px !important;
}

.platform-wrappers {
  background-color: white;
  height: 48px;
  display: flex;
  flex-direction: column;

  .component {
    padding: $s-padding-gap;
  }
}
